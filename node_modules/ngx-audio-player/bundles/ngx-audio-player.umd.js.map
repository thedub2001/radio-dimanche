{"version":3,"file":"ngx-audio-player.umd.js","sources":["../../../projects/ngx-audio-player/src/lib/service/audio-player-service/audio-player.service.ts","../../../projects/ngx-audio-player/src/lib/component/ngx-audio-player/ngx-audio-player.component.ts","../../../projects/ngx-audio-player/src/lib/pipe/seconds-to-minutes.ts","../../../projects/ngx-audio-player/src/lib/ngx-audio-player.module.ts","../../../projects/ngx-audio-player/src/lib/model/track.model.ts","../../../projects/ngx-audio-player/src/public_api.ts","../../../projects/ngx-audio-player/src/ngx-audio-player.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Track } from '../../model/track.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AudioPlayerService {\n\n  // Dynamic update of playlist\n  tracks: Track[] = [];\n  playlistSubject$: BehaviorSubject<Track[]> =\n    new BehaviorSubject<Track[]>(this.tracks);\n\n  // Get the current track\n  currentTrack: Track = null;\n  currentTrackSubject$: BehaviorSubject<Track> =\n    new BehaviorSubject<Track>(this.currentTrack);\n\n  // Get the current time\n  currentTime: any = null;\n  currentTimeSubject$: BehaviorSubject<any> =\n    new BehaviorSubject<any>(this.currentTime);\n\n  setPlaylist(tracks: Track[]) {\n    this.tracks = tracks;\n    this.playlistSubject$.next(this.tracks);\n  }\n\n  getPlaylist(): Observable<Track[]> {\n    return this.playlistSubject$.asObservable();\n  }\n\n  setCurrentTrack(currentTrack: Track) {\n    this.currentTrack = currentTrack;\n    this.currentTrackSubject$.next(this.currentTrack);\n  }\n\n  getCurrentTrack(): Observable<Track> {\n    return this.currentTrackSubject$.asObservable();\n  }\n\n  setCurrentTime(currentTime: any) {\n    this.currentTime = currentTime;\n    this.currentTimeSubject$.next(this.currentTime);\n  }\n\n  getCurrentTime(): Observable<any> {\n    return this.currentTimeSubject$.asObservable();\n  }\n\n}\n","\nimport { Component, OnInit, Input, ViewChild, Output, ElementRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { Track } from '../../model/track.model';\nimport { MatSlider } from '@angular/material/slider';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { AudioPlayerService } from '../../service/audio-player-service/audio-player.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'mat-advanced-audio-player,ngx-audio-player',\n    templateUrl: './ngx-audio-player.component.html',\n    styleUrls: ['./ngx-audio-player.component.css']\n})\nexport class AudioPlayerComponent implements OnInit, OnChanges {\n\n    audioPlayerService: AudioPlayerService;\n    repeat: string = 'all';\n    constructor(elem: ElementRef) {\n        if (elem.nativeElement.tagName.toLowerCase() === 'mat-advanced-audio-player') {\n            console.warn(`'mat-advanced-audio-player' selector is deprecated; use 'ngx-audio-player' instead.`);\n        }\n        this.audioPlayerService = new AudioPlayerService();\n    }\n\n    @Input()\n    set playlist(playlist: Track[]) {\n        this.audioPlayerService.setPlaylist(playlist);\n    }\n\n    @ViewChild(MatPaginator, { static: false }) set matPaginator(mp: MatPaginator) {\n        this.paginator = mp;\n        this.setDataSourceAttributes();\n    }\n\n\n    displayedColumns: string[];\n    dataSource = new MatTableDataSource<Track>();\n    paginator: MatPaginator;\n\n    timeLineDuration: MatSlider;\n\n    tracks: Track[] = [];\n\n    @Input() displayTitle = true;\n    @Input() displayPlaylist = true;\n    @Input() displayVolumeControls = true;\n    @Input() displayRepeatControls = true;\n    @Input() pageSizeOptions = [10, 20, 30];\n    @Input() expanded = true;\n    @Input() autoPlay = false;\n    @Input() disablePositionSlider = false;\n    @Input() displayArtist = false;\n    @Input() displayDuration = false;\n\n    // Support for internationalization\n    @Input() tableHeader = 'Playlist';\n    @Input() titleHeader = 'Title';\n    @Input() artistHeader = 'Artist';\n    @Input() durationHeader = 'Duration';\n\n\n    currentIndex = 0;\n\n    @Output()\n    trackEnded: Subject<string> = new Subject<string>();\n\n    @ViewChild('audioPlayer', { static: true }) player: ElementRef;\n\n    iOS = (/iPad|iPhone|iPod/.test(navigator.platform)\n        || (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1));\n\n    loaderDisplay = false;\n    isPlaying = false;\n    currentTime = 0;\n    volume = 0.1;\n    duration = 0.01;\n\n    private startOffsetValue = 0;\n    @Input()\n    set startOffset(seconds: number) {\n        this.startOffsetValue = seconds;\n        this.player.nativeElement.currentTime = seconds;\n    }\n    get startOffset(): number {\n        return this.startOffsetValue;\n    }\n\n    @Input()\n    public endOffset = 0;\n\n    currTimePosChanged(event) {\n        this.player.nativeElement.currentTime = event.value;\n    }\n\n    bindPlayerEvent(): void {\n\n        this.player.nativeElement.addEventListener('playing', () => {\n            this.isPlaying = true;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('pause', () => {\n            this.isPlaying = false;\n        });\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.currentTime = Math.floor(this.player.nativeElement.currentTime);\n            // BUG: Commenting for `ended` event not firing #66\n            // if (this.currentTime >= this.duration - this.endOffset) {\n            //     this.player.nativeElement.pause();\n            // }\n        });\n        this.player.nativeElement.addEventListener('volume', () => {\n            this.volume = Math.floor(this.player.nativeElement.volume);\n        });\n        if (!this.iOS) {\n            this.player.nativeElement.addEventListener('loadstart', () => {\n                this.loaderDisplay = true;\n            });\n        }\n        this.player.nativeElement.addEventListener('loadedmetadata', () => {\n            this.loaderDisplay = false;\n            this.duration = Math.floor(this.player.nativeElement.duration);\n        });\n        this.player.nativeElement.addEventListener('ended', () => {\n            this.trackEnded.next('ended');\n        });\n\n    }\n\n    playBtnHandler(): void {\n        if (this.loaderDisplay) {\n            return;\n        }\n        if (this.player.nativeElement.paused) {\n            if (this.currentTime >= this.duration - this.endOffset) {\n                this.player.nativeElement.currentTime = this.startOffset;\n            } else {\n                this.player.nativeElement.currentTime = this.currentTime;\n            }\n\n            this.player.nativeElement.play();\n        } else {\n            this.currentTime = this.player.nativeElement.currentTime;\n            this.player.nativeElement.pause();\n        }\n    }\n\n    play(track?: Track): void {\n\n        if (track) {\n            this.startOffset = track.startOffset || 0;\n            this.endOffset = track.endOffset || 0;\n        }\n\n        setTimeout(() => {\n            this.player.nativeElement.play();\n        }, 50);\n\n    }\n\n    toggleVolume() {\n        if (this.volume === 0) {\n            this.setVolume(1.0);\n        } else {\n            this.setVolume(0);\n        }\n    }\n\n    toggleRepeat() {\n        if (this.repeat === 'none') {\n            this.repeat = 'all';\n        } else if (this.repeat === 'all') {\n            if (this.tracks.length > 1) {\n                this.repeat = 'one';\n            } else {\n                this.repeat = 'none';\n            }\n        } else if (this.repeat === 'one' && this.tracks.length > 1) {\n            this.repeat = 'none';\n        }\n    }\n\n    private setVolume(vol) {\n        this.volume = vol;\n        this.player.nativeElement.volume = this.volume;\n    }\n\n    ngOnInit() {\n\n        this.bindPlayerEvent();\n\n        // auto play next track\n        this.player.nativeElement.addEventListener('ended', () => {\n            if (this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n                if (this.repeat === 'all') {\n                    this.nextSong();\n                } else if (this.repeat === 'one') {\n                    this.play();\n                } else if (this.repeat === 'none') {\n                    // Do nothing\n                }\n            }\n        });\n\n        this.player.nativeElement.addEventListener('timeupdate', () => {\n            this.audioPlayerService.setCurrentTime(this.player.nativeElement.currentTime);\n        });\n\n        // Subscribe to playlist observer from AudioPlayerService and\n        // update the playlist within MatAdvancedAudioPlayerComponent\n        this.audioPlayerService.getPlaylist().subscribe(tracks => {\n            if (tracks !== null && tracks !== []) {\n                this.tracks = tracks;\n                this.initialize();\n            }\n        });\n\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.hasOwnProperty('displayArtist') || changes.hasOwnProperty('displayDuration')) {\n            this.buildDisplayedColumns();\n        }\n    }\n\n    private buildDisplayedColumns() {\n        this.displayedColumns = ['title'];\n        if (this.displayArtist) {\n            this.displayedColumns.push('artist');\n        }\n        if (this.displayDuration) {\n            this.displayedColumns.push('duration');\n        }\n        this.displayedColumns.push('status');\n    }\n\n    initialize() {\n        this.buildDisplayedColumns();\n\n        // populate indexs for the track and configure\n        // material table data source and paginator\n        this.setDataSourceAttributes();\n\n\n        this.player.nativeElement.currentTime = this.startOffset;\n        this.updateCurrentTrack();\n\n        if (this.autoPlay) {\n            this.play();\n        }\n    }\n\n    setDataSourceAttributes() {\n        let index = 1;\n        if (this.tracks) {\n            this.tracks.forEach((track: Track) => {\n                track.index = index++;\n            });\n            this.dataSource = new MatTableDataSource<Track>(this.tracks);\n            this.dataSource.paginator = this.paginator;\n        }\n    }\n\n    nextSong(): void {\n        if (this.displayPlaylist === true\n            && (((this.currentIndex + 1) % this.paginator.pageSize) === 0\n                || (this.currentIndex + 1) === this.paginator.length)) {\n            if (this.paginator.hasNextPage()) {\n                this.paginator.nextPage();\n            } else if (!this.paginator.hasNextPage()) {\n                this.paginator.firstPage();\n            }\n        }\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if ((this.currentIndex + 1) >= this.tracks.length) {\n            this.currentIndex = 0;\n        } else {\n            this.currentIndex++;\n        }\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    previousSong(): void {\n        this.currentTime = 0;\n        this.duration = 0.01;\n        if (!this.checkIfSongHasStartedSinceAtleastTwoSeconds()) {\n            if (this.displayPlaylist === true\n                && (((this.currentIndex) % this.paginator.pageSize) === 0\n                    || (this.currentIndex === 0))) {\n                if (this.paginator.hasPreviousPage()) {\n                    this.paginator.previousPage();       \n                } else if (!this.paginator.hasPreviousPage()) {\n                    this.paginator.lastPage();\n                }\n            }\n            if ((this.currentIndex - 1) < 0) {\n                this.currentIndex = (this.tracks.length - 1);\n            } else {\n                this.currentIndex--;\n            }\n        } else {\n            this.resetSong();\n        }\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    resetSong(): void {\n        this.player.nativeElement.src = this.tracks[this.currentIndex].link;\n    }\n\n    selectTrack(index: number): void {\n        this.currentIndex = index - 1;\n        this.updateCurrentTrack();\n        this.play();\n    }\n\n    checkIfSongHasStartedSinceAtleastTwoSeconds(): boolean {\n        return this.player.nativeElement.currentTime > 2;\n    }\n\n    updateCurrentTrack() {\n        this.audioPlayerService.setCurrentTrack(this.tracks[this.currentIndex]);\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Transform seconds to minutes:seconds\n * Example : 270 -> 02:30\n*/\n@Pipe({ name: 'secondsToMinutes' })\nexport class SecondsToMinutesPipe implements PipeTransform {\n    transform(time: number): string {\n        const hours = ('0' + Math.floor(time / 3600)).slice(-2);\n        const minutes = ('0' + Math.floor((time % 3600) / 60)).slice(-2);\n        const seconds = ('0' + time % 60).slice(-2);\n        if (hours !== '00') { return `${hours}:${minutes}:${seconds}`; }\n        return `${minutes}:${seconds}`;\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { CommonModule } from '@angular/common';\nimport { SecondsToMinutesPipe } from './pipe/seconds-to-minutes';\n\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { AudioPlayerComponent } from './component/ngx-audio-player/ngx-audio-player.component';\n\n@NgModule({\n  declarations: [SecondsToMinutesPipe, AudioPlayerComponent],\n  imports: [CommonModule, FormsModule, MatButtonModule, MatCardModule, MatTableModule, MatFormFieldModule,\n    MatSliderModule, MatExpansionModule, MatPaginatorModule, MatIconModule],\n  exports: [AudioPlayerComponent]\n})\nexport class NgxAudioPlayerModule {\n}\n","export class Track {\n  index?: number;\n  link: string;\n  title: string;\n  startOffset?: number;\n  endOffset?: number;\n  duration?: number;\n  artist?: string;\n  public toString = (): string => {\n    return `Track (index: ${this.index}, title: ${this.title})`;\n  }\n}\n","/*\n * Public API Surface of ngx-audio-player\n */\n\nexport * from './lib/component/ngx-audio-player/ngx-audio-player.component';\nexport * from './lib/ngx-audio-player.module';\nexport * from './lib/model/track.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {SecondsToMinutesPipe as ɵa} from './lib/pipe/seconds-to-minutes';"],"names":["BehaviorSubject","Injectable","MatTableDataSource","Subject","Component","ElementRef","Input","ViewChild","MatPaginator","Output","Pipe","NgModule","CommonModule","FormsModule","MatButtonModule","MatCardModule","MatTableModule","MatFormFieldModule","MatSliderModule","MatExpansionModule","MatPaginatorModule","MatIconModule"],"mappings":"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"}